# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: cicd-min-bucket
  AWS_CODE_DEPLOY_APPLICATION: cicd-CodeDeploy
  AWS_CODE_DEPLOY_GROUP: cicd-CodeDeploy-group

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: gradlew permmision
      run: chmod +x ./gradlew
    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build -x test

   - name: AWS credential
     uses: aws-actions/configure-aws-credentials@v1
     with:
       aws-region: ${{ env.AWS_REGION }}
       aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
       aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

   - name: S3 upload
     run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .

   - name: CodeDeploy
     run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
   # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
   # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
   #
   # - name: Setup Gradle
   #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
   #   with:
   #     gradle-version: '8.5'
   #
   # - name: Build with Gradle 8.5
   #   run: gradle build

 dependency-submission:

   runs-on: ubuntu-latest
   permissions:
     contents: write

   steps:
   - uses: actions/checkout@v4
   - name: Set up JDK 17
     uses: actions/setup-java@v4
     with:
       java-version: '17'
       distribution: 'temurin'

   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
   # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
   - name: Generate and submit dependency graph
     uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
